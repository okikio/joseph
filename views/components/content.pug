mixin image(value)
  - let _value = Object.assign({ class: "" }, value);
  - let _class = _value.class;
  - let _src = _value.src || "/assets/city";
  - let _alt = _value.alt || "Alternate text";
  .layer-image(class=_class)
    .layer-image-preview-img-card.load-animation
    .load-img
      .img-contain
        picture
          each n in [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
            - let val = n > 5 && n <= 8 ? 70 : (n <= 5 ? Math.max(70 - (n * 5), 45) * 10 : 100);
            source(media=`(max-width: ${n}00px)` srcset!=`${_src}.webp?w=${n + 1}00&quality=${val}` sizes=`(max-width: ${n}00px) ${n}00w` type='image/webp')
            source(media=`(max-width: ${n}00px)` srcset!=`${_src}.jpg?w=${n + 1}00&quality=${val}` sizes=`(max-width: ${n}00px) ${n}00w` type='image/jpeg')

          source(media='(min-width: 1200px)' srcset!=`${_src}.webp` sizes="100vw" type='image/webp')
          source(media='(min-width: 1200px)' srcset!=`${_src}.jpg` sizes="100vw" type='image/jpeg')
          img.core-img(src!=`${_src}.jpg` alt=_alt loading="lazy" sizes="(max-width: 500px) 500w,(max-width: 700px) 700w,(max-width: 900px) 900w, 100vw" width="100vw")
        picture
          source(srcset!=`${_src}.webp?w=60&quality=100&effect=blur:120` sizes="60w" type='image/webp')
          img.placeholder-img(src!=`${_src}.jpg?w=60&quality=100&effect=blur:120` sizes="60w" alt=_alt  loading="auto" width="60w")
        noscript Javascript is necesscary for this sites awesome experience.
          picture
            source(srcset!=`${_src}.webp` sizes="100vw" type='image/webp')
            source(srcset!=`${_src}.jpg` sizes="100vw" type='image/jpeg')
            img.no-script-img(src!=`${_src}.jpg` alt=_alt loading="lazy" sizes="(max-width: 500px) 500w,(max-width: 700px) 700w,(max-width: 900px) 900w, 100vw" width="100vw")
    .layer-image-overlay


mixin link(value)
  - let _value = Object.assign({ class: "layout-inline", content: "" }, value);
  - let _content = _value.content;
  - let _class = _value.class;
  - let _href = _value.href;

  a(href=_href class=_class tabindex="0" title=_content)= _content
    block


mixin span(value)
  if typeof value == "string"
    span.style-line-height-double.layout-padding-vert-small !{value}
      block

  else
    - let _value = Object.assign({ class: "", content: "" }, value);
    - let _content = _value.content;
    - let _class = _value.class;
    - let _type = _value.type;
    - let _tempClass = _class;

    if _type != "blank"
      - _class = `style-line-height-double layout-padding-vert-small ${_tempClass}`;

    span(class=_class) !{_content}
      block


mixin basicContent(value)
  - let content = value.content;
  - let image = value.img;
  - let link = value.a;

  if typeof value == "string" || typeof content == "string"
    +span(value)

  else if typeof image == "object"
    +image(image)

  else if typeof link == "object"
    +link(link)


mixin tileContent(value)
  - let _content = value.content;
  - let _title = value.title;
  - let _class = value.class;
  - let _image = value.img;

  .layer-tile(class=_class)
    if _image
      +image(_image)

    section.layer-tile-footer
      if _title
        section.layer-tile-title= _title

      if _content
        span.layer-tile-content.style-font-12= _content


mixin tile(value)
  - let _link = value.a;

  if _link
    +link(_link)
      +tileContent(value)

  else
    +tileContent(value)


mixin column(value)
  - let _class = value.class || "layout-col";
  - let _values = value.values;

  section(class=_class)
    if Array.isArray(_values)
      each _value in _values
        - let _content = _value.content;
        - let _tile = _value.tile;

        if typeof _content == "string"
          - let $value = Object.assign({ type: "blank" }, _value);
          +span($value)

        else if typeof _tile == "object"
          +tile(_tile)

        else
          +basicContent(_value)


mixin row(value)
  - let _class = value.class || "";
  - let _values = value.values;

  section.layout-row(class=_class)
    if Array.isArray(_values)
      each _value in _values
        - let _column = _value.col;
        - let _tile = _value.tile;

        if typeof _column == "object"
          +column(_column)

        else if typeof _tile == "object"
          +tile(_tile)

        else
          +basicContent(_value)


mixin content(value)
  - let column = value.col;
  - let _tile = value.tile;
  - let row = value.row;

  if typeof column == "object"
    +column(column)

  else if typeof row == "object"
    +row(row)

  else if typeof _tile == "object"
    +tile(_tile)

  else
    +basicContent(value)
