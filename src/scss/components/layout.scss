/*
    -- Layout (margin, padding, postion, shape, etc...) --
     * vert = vertical
     * horz = horizontal
*/
.layout {
    %contain {
        contain: strict;
    }

    @extend %contain;
    position: relative;
    display: block;
    margin: 0 auto;
    width: 100%;

    &-margin {
        margin: auto;
    }

    &-max-height {
        &,
        &-limited {
            position: relative;
            height: 100vh;
        }

        @media #{$screen-size-phone} {
            &-limited {
                height: initial;
            }
        }
    }

    &,
    &-vert {
        padding: {
            bottom: $size-extra-xl;
            top: $size-extra-xl;
        }
    }

    &,
    &-horz {
        padding: {
            right: $size-sub-extra-large;
            left: $size-sub-extra-large;
        }
    }

    /*
       -- Base Layouts (these tamper with all the layout setting and provide a great start for a layer) --
   */
    &-enlarge {

        &,
        &-vert {
            padding: {
                bottom: $size-gigantic;
                top: $size-gigantic;
            }
        }

        &,
        &-horz {
            padding: {
                right: $size-huge;
                left: $size-huge;
            }
        }
    }

    &-shorten {

        &,
        &-vert {
            padding: {
                bottom: $size-sub-large;
                top: $size-sub-large;
            }
        }

        &,
        &-horz {
            padding: {
                right: $size-sub-large;
                left: $size-sub-large;
            }
        }
    }

    @media (max-width: 500px) {

        &,
        &-vert {
            padding: {
                bottom: $size-sub-large;
                top: $size-sub-large;
            }
        }

        &,
        &-horz {
            padding: {
                right: $size-sub-large;
                left: $size-sub-large;
            }
        }

        &-enlarge {

            &,
            &-vert {
                padding: {
                    bottom: $size-extra-large;
                    top: $size-extra-large;
                }
            }

            &,
            &-horz {
                padding: {
                    right: $size-larger;
                    left: $size-larger;
                }
            }
        }

        &-shorten {

            &,
            &-vert {
                padding: {
                    bottom: $size;
                    top: $size;
                }
            }

            &,
            &-horz {
                padding: {
                    right: $size;
                    left: $size;
                }
            }
        }

        &-shrink {

            &,
            &-vert {
                padding: {
                    bottom: $size-sub-large ;
                    top: $size-sub-large ;
                }
            }

            &,
            &-horz {
                padding: {
                    right: $size-sub-large ;
                    left: $size-sub-large ;
                }
            }

            &-shorten {

                &,
                &-vert {
                    padding: {
                        bottom: $size ;
                        top: $size ;
                    }
                }

                &,
                &-horz {
                    padding: {
                        right: $size ;
                        left: $size ;
                    }
                }
            }

            &-mini {

                &,
                &-vert {
                    padding: {
                        bottom: $size-small ;
                        top: $size-small ;
                    }
                }

                &,
                &-horz {
                    padding: {
                        right: $size-small ;
                        left: $size-small ;
                    }
                }
            }
        }
    }

    /* -- Layout Type (block, inline-block, inline, flex) -- */
    &-block {
        display: block !important;
    }

    &-flex {
        display: flex ;

        &-center {
            justify-content: center;
            align-content: center;
            align-items: center;
        }

        &-wrap {
            flex-wrap: wrap;
        }

        &-row {
            flex-direction: row;
        }

        &-col {
            flex-direction: column;
        }
    }

    $alignments: ("self", "items");

    @each $type in $alignments {
        &-align-#{$type} {
            &-start {
                align-#{$type}: flex-start;
            }

            &-center {
                align-#{$type}: center;
            }

            &-stretch {
                align-#{$type}: stretch;
            }

            &-baseline {
                align-#{$type}: stretch;
            }

            &-end {
                align-#{$type}: flex-end;
            }
        }
    }

    &-justify-content {
        &-start {
            justify-content: start;
        }

        &-center {
            justify-content: center;
        }
    }

    &-spacer {
        -webkit-box-flex: 1;
        /* OLD - iOS 6-, Safari 3.1-6 */
        -webkit-flex: 1;
        /* Safari 6.1+. iOS 7.1+, BB10 */
        -ms-flex: 1;
        /* IE 10 */
        flex: 1;
    }

    &-display-none {
        // display: none;
        visibility: hidden;
        // @include deviceList(display, none);

    }

    &-inline {
        display: inline !important;

        &-block {
            display: inline-block !important;
        }
    }

    /* -- Position (horizontal - left, center, right) -- */
    &-left {
        position: relative;
        float: left;
        @include deviceList(float, left);
    }

    &-center {
        position: relative;
        margin: 0 auto;
        width: 100%;
    }

    &-right {
        position: relative;
        float: right;
        @include deviceList(float, right);
    }

    /* -- Container (keep the page focused and content central) -- */
    &-contain {

        &,
        &-larger,
        &-enlarge,
        &-slim,
        &-large,
        &-small {
            margin-right: auto;
            margin-left: auto;
            width: 100%;
            @extend %contain;
        }

        &-small {
            max-width: 550px;
        }

        @media (min-width: 300px) {
            &-slim {
                padding: {
                    left: 0;
                    right: 0;
                }
            }
        }

        @media (min-width: 650px) {
            .layout-row {
                margin: {
                    right: -$size-small;
                    left: -$size-small;
                }
            }
        }

        @media (min-width: 800px) {

            &,
            &-large {
                max-width: 800px;
            }

            &-enlarge {
                max-width: 900px;
            }
        }

        @media (min-width: 900px) {
            &-small {
                max-width: 700px;
            }

            &,
            &-large {
                max-width: 1000px;
            }

            &-enlarge {
                max-width: 1100px;
            }
        }

        @media (min-width: 1000px) {
            &-large {
                max-width: 1200px;
            }

            &-enlarge {
                max-width: 1300px;
            }
        }

        @media (min-width: 1200px) {
            &-larger {
                max-width: 1400px;
            }

            &-enlarge {
                max-width: 1400px;
            }
        }

        @media (min-width: 1400px) {
            &-larger {
                max-width: 1600px;
            }
        }
    }

    /*
    -- Paddings & Margins (create padding & margin defaults for left, top, right, bottom, small, mid, large, etc...[these can be conbined to make cool paddings and margins without css]) --
     * dull = the value is 0
   */
    $spaceTypes: ("margin", "padding");

    @each $spacing in $spaceTypes {
        &-#{$spacing} {
            $spacing-parent: &;
            $basic-dirs: ("horz": ("left", "right"),
                    "vert": ("top", "bottom"));

            @each $basic-dir, $dirs in $basic-dirs {
                &,
                &-#{$basic-dir} {
                    @each $dir in $dirs {
                        &,
                        &-#{$dir} {
                            & {
                                #{$spacing}-#{$dir}: $size;
                                @include deviceList(#{$spacing}-#{$dir}, $size);
                            }

                            @each $type, $val in $sizes {
                                &-#{$type} {
                                    #{$spacing}-#{$dir}: $val;
                                    @include deviceList(#{$spacing}-#{$dir}, $val);
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    /* -- Clearfix (fix for using float) -- */
    &-clearfix:after,
    &-clearfix:before,
    &-contain:after,
    &-contain:before,
    &-contain-small:after,
    &-contain-small:before {
        @extend %contain;
        display: table;
        content: "";
        clear: both;
    }

    /* -- Rows & Columns -- */
    &-row {
        flex-flow: row wrap;
        display: flex;

        [class*="layout-col"] {
            position: relative;
            min-height: 1px;
            max-width: 100%;
            width: 100%;

            @media (min-width: 550px) {
                padding-right: $size-small;
                padding-left: $size-small;
            }
        }
    }

    &-col {
        max-width: 100%;
        flex-basis: 0;
        flex-grow: 1;

        @for $i from 1 through 12 {
            &-#{$i} {
                max-width: 100% / 12 * $i !important;

                @media (max-width: 750px) {
                    @if $i>=6 {
                        max-width: 100% !important;
                    }

                    @else {
                        max-width: 50% !important;
                    }
                }

                @media (max-width: 550px) {
                    max-width: 100% !important;
                }
            }
        }
    }
}